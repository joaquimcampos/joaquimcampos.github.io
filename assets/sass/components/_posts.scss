///
/// Editorial by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Posts */

	.posts {
		$gutter: (_size(gutter) * 2);

		@include vendor('display', 'flex');
		@include vendor('flex-wrap', 'wrap');
		margin: 0 0 _size(element-margin) ($gutter * -1);
		width: calc(100% + #{$gutter});

		article {
			@include vendor('flex-grow', '0');
			@include vendor('flex-shrink', '1');
			margin: 0 0 $gutter $gutter;
			position: relative;
			width: calc(#{calc(100% / 3)} - #{$gutter});

			&:before {
				background: _palette(border);
				content: '';
				display: block;
				height: calc(100% + #{$gutter});
				left: ($gutter * -0.5);
				position: absolute;
				top: 0;
				width: 1px;
			}

			&:after {
				background: _palette(border);
				bottom: ($gutter * -0.5);
				content: '';
				display: block;
				height: 1px;
				position: absolute;
				right: 0;
				width: calc(100% + #{$gutter});
			}

			// second to last ghost elements
			&:nth-last-child(1) {
				&:before {
					display: none;
				}
			}

			// first ghost element
			&:nth-last-child(2) {
				&:before {
					height: 100%;
				}
			}

			// last real element, ghost elements
			&:nth-last-child(3),
			&:nth-last-child(2),
			&:nth-last-child(1){

				margin-bottom: 0;

				&:after {
					display: none;
				}
			}

			> :last-child {
				margin-bottom: 0;
			}

			.image {
				display: block;
				margin: 0 0 _size(element-margin) 0;

				img {
					background-color: _palette(bg-alt);
					display: block;
					width: 100%;
				}

				#deepsplines-logo2 {
					display: none;
				}

			}
		}

		@include breakpoint('medium-hmax-to-max') {
			article {
				// 3 in each row

				&:nth-child(3n + 1) {
					&:before {
						display: none;
					}

					&:after {
						width: 100%;
					}
				}

				// Begin added code block//

				// nth-last-of-type filters operates solely on element type (article), not class.
				// Need to use nth-of-type instead.
				&:nth-of-type(6):before {
					height: calc(100% + #{$gutter * 0.5});
				}

				// Optional: Add these two to remove lower border on all hanging elements

				// &:nth-of-type(4) {
				// 	&:after {
				// 		width: calc(100% + #{0.5 * $gutter});
				// 		right: ($gutter * -0.5);
				// 	}
				// }

				// &:nth-of-type(5),
				// &:nth-of-type(6) {
				// 	&:after {
				// 		display: none;
				// 	}
				// }
				
				// End added code block //

			}
		}

		@include breakpoint('<=medium-hmax') {
			article {
				// 2 in each row

				width: calc(50% - #{$gutter});

				&:nth-child(2n + 1) {
					&:before {
						display: none;
					}

					&:after {
						width: 100%;
					}
				}

				&:nth-last-child(1) {
					margin-bottom: 0;
				}
			}
		}

		@include breakpoint('<=small') {
			$gutter: _size(gutter) * 1.5;

			margin: 0 0 _size(element-margin) ($gutter * -1);
			width: calc(100% + #{$gutter});

			article {
				margin: 0 0 $gutter $gutter;
				width: calc(50% - #{$gutter});

				&:before {
					height: calc(100% + #{$gutter});
					left: ($gutter * -0.5);
				}

				&:after {
					bottom: ($gutter * -0.5);
					width: calc(100% + #{$gutter});
				}

			}
		}

		// Option: small instead of xsmall
		@include breakpoint('<=xsmall') {
			$gutter: _size(gutter) * 1.5;

			margin: 0 0 _size(element-margin) 0;
			width: 100%;

			article {
				margin: 0 0 $gutter 0;
				width: 100%;

				&:before {
					display: none;
				}

				&:after {
					width: 100%;
				}

				&:last-child {
					margin-bottom: 0;

					&:after {
						display: none;
					}
				}

				.image {
					display: flex;
					justify-content: center;
					margin: 0 0 _size(element-margin) 0;
					width: 100%;
					height: 14em;
					background-color: _palette(bg-alt);

					img {
						display: flex;
						width: auto;
						max-width: 100%;
						max-height: 100%;
					}

					#deepsplines-logo {
						display: none;
					}

					#deepsplines-logo2 {
						display: flex;
						padding: 2.4em;
					}

					#compression-logo {
						padding: .5em;
					}

					#germano-logo {
						padding: .5em;
					}

					#htv-logo {
						padding: .25em;
					}
				}
			}
		}
	}

	#projects {
		h3 {
			span {
				color: _palette(fg);
			}
		}
		ul {
			position: absolute;
			bottom: 0;
			left: 0;
		}
		p {
			margin-bottom: 0;
		}
	}
